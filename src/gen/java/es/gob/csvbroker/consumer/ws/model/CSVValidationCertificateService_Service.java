
package es.gob.csvbroker.consumer.ws.model;

import es.gob.csvbroker.consumer.ws.CSVValidationCertificateService;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.0
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "CSVValidationCertificateService", targetNamespace = "urn:es:gob:aapp:csvbroker:webservices:validation:v1.0", wsdlLocation = "file:/home/david/svn/csvbroker/csvbroker/trunk/dev/csvbroker-consumer/src/main/resources/wsdl/CSVValidationCertificateService.wsdl")
public class CSVValidationCertificateService_Service
    extends Service
{

    private final static URL CSVVALIDATIONCERTIFICATESERVICE_WSDL_LOCATION;
    private final static WebServiceException CSVVALIDATIONCERTIFICATESERVICE_EXCEPTION;
    private final static QName CSVVALIDATIONCERTIFICATESERVICE_QNAME = new QName("urn:es:gob:aapp:csvbroker:webservices:validation:v1.0", "CSVValidationCertificateService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/home/david/svn/csvbroker/csvbroker/trunk/dev/csvbroker-consumer/src/main/resources/wsdl/CSVValidationCertificateService.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        CSVVALIDATIONCERTIFICATESERVICE_WSDL_LOCATION = url;
        CSVVALIDATIONCERTIFICATESERVICE_EXCEPTION = e;
    }

    public CSVValidationCertificateService_Service() {
        super(__getWsdlLocation(), CSVVALIDATIONCERTIFICATESERVICE_QNAME);
    }

    public CSVValidationCertificateService_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), CSVVALIDATIONCERTIFICATESERVICE_QNAME, features);
    }

    public CSVValidationCertificateService_Service(URL wsdlLocation) {
        super(wsdlLocation, CSVVALIDATIONCERTIFICATESERVICE_QNAME);
    }

    public CSVValidationCertificateService_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, CSVVALIDATIONCERTIFICATESERVICE_QNAME, features);
    }

    public CSVValidationCertificateService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CSVValidationCertificateService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns CSVValidationCertificateService
     */
    @WebEndpoint(name = "CSVValidationServiceCertificatePort")
    public CSVValidationCertificateService getCSVValidationServiceCertificatePort() {
        return super.getPort(new QName("urn:es:gob:aapp:csvbroker:webservices:validation:v1.0", "CSVValidationServiceCertificatePort"), CSVValidationCertificateService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CSVValidationCertificateService
     */
    @WebEndpoint(name = "CSVValidationServiceCertificatePort")
    public CSVValidationCertificateService getCSVValidationServiceCertificatePort(WebServiceFeature... features) {
        return super.getPort(new QName("urn:es:gob:aapp:csvbroker:webservices:validation:v1.0", "CSVValidationServiceCertificatePort"), CSVValidationCertificateService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (CSVVALIDATIONCERTIFICATESERVICE_EXCEPTION!= null) {
            throw CSVVALIDATIONCERTIFICATESERVICE_EXCEPTION;
        }
        return CSVVALIDATIONCERTIFICATESERVICE_WSDL_LOCATION;
    }

}
